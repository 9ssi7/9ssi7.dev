---
import { fetchMediumArticles, type MediumArticle } from "@/lib/medium";
import Icon from "@/components/Icon.astro";
import { useI18n } from "@/i18n/utils";

const { t, d } = useI18n(Astro.locals.lang);

const mediumUsername = process.env.MEDIUM_USERNAME || "9ssi7";
const articles = await fetchMediumArticles(mediumUsername);
const displayArticles = articles.slice(0, 6); // Show latest 6 articles
---

<section class="animate-fade-in">
  <h2 class="font-medium text-gray-800 dark:text-neutral-200">{t("medium_articles")}</h2>
  <p class="mb-2 text-sm text-gray-600 dark:text-gray-400">{t("medium_articles_desc")}</p>
  <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
    {displayArticles.map((article: MediumArticle) => (
      <article class="group relative overflow-hidden rounded-lg border bg-white transition-all hover:shadow-lg dark:bg-zinc-900">
        <a
          href={article.link}
          target="_blank"
          rel="noopener noreferrer"
          class="block"
        >
          {article.thumbnail && (
            <div class="aspect-video overflow-hidden bg-gray-100 dark:bg-zinc-900">
              <img
                src={article.thumbnail}
                alt={article.title}
                class="h-full w-full object-cover transition-transform group-hover:scale-105"
                loading="lazy"
              />
            </div>
          )}
          <div class="p-4">
            <h3 class="mb-2 line-clamp-2 text-lg font-semibold text-gray-900 dark:text-gray-100">
              {article.title}
            </h3>
            <p class="mb-3 line-clamp-3 text-sm text-gray-600 dark:text-gray-400">
              {article.description}
            </p>
            <div class="flex items-center justify-between">
              <time class="text-xs text-gray-500 dark:text-gray-500">
                {d(article.pubDate, { year: "numeric", month: "short", day: "numeric" })}
              </time>
              <Icon name="book" className="h-4 w-4 text-gray-400 transition-colors group-hover:text-gray-600 dark:text-gray-600 dark:group-hover:text-gray-400" />
            </div>
            {article.categories.length > 0 && (
              <div class="mt-3 flex flex-wrap gap-1">
                {article.categories.slice(0, 2).map((category) => (
                  <span class="inline-block rounded-full bg-gray-100 px-2 py-1 text-xs text-gray-600 dark:bg-zinc-800 dark:text-gray-400">
                    {category}
                  </span>
                ))}
              </div>
            )}
          </div>
        </a>
      </article>
    ))}
  </div>
  
  {articles.length > displayArticles.length && (
    <div class="mt-6 text-center">
      <a
        href={`https://medium.com/@${mediumUsername}`}
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center gap-2 rounded-lg bg-gray-100 px-4 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-200 dark:bg-zinc-800 dark:text-gray-300 dark:hover:bg-gray-700"
      >
        {t("medium_view_all")}
        <Icon name="book" className="h-4 w-4" />
      </a>
    </div>
  )}
  
  {articles.length === 0 && (
    <div class="rounded-lg bg-gray-50 p-8 text-center dark:bg-zinc-800">
      <Icon name="book" className="mx-auto mb-4 h-12 w-12 text-gray-400" />
      <p class="text-gray-600 dark:text-gray-400">{t("medium_no_articles")}</p>
    </div>
  )}
</section>